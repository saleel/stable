// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StableCreated extends ethereum.Event {
  get params(): StableCreated__Params {
    return new StableCreated__Params(this);
  }
}

export class StableCreated__Params {
  _event: StableCreated;

  constructor(event: StableCreated) {
    this._event = event;
  }

  get country(): string {
    return this._event.parameters[0].value.toString();
  }

  get currency(): string {
    return this._event.parameters[1].value.toString();
  }

  get stableAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class StableFactory extends ethereum.SmartContract {
  static bind(address: Address): StableFactory {
    return new StableFactory("StableFactory", address);
  }

  childContracts(param0: string): Address {
    let result = super.call(
      "childContracts",
      "childContracts(string):(address)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toAddress();
  }

  try_childContracts(param0: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "childContracts",
      "childContracts(string):(address)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createStable(
    _currency: string,
    _country: string,
    _startDate: BigInt,
    _productIds: Array<string>,
    _weightage: Array<BigInt>,
    _productDetailsCid: string
  ): Address {
    let result = super.call(
      "createStable",
      "createStable(string,string,uint32,string[],uint32[],string):(address)",
      [
        ethereum.Value.fromString(_currency),
        ethereum.Value.fromString(_country),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromStringArray(_productIds),
        ethereum.Value.fromUnsignedBigIntArray(_weightage),
        ethereum.Value.fromString(_productDetailsCid)
      ]
    );

    return result[0].toAddress();
  }

  try_createStable(
    _currency: string,
    _country: string,
    _startDate: BigInt,
    _productIds: Array<string>,
    _weightage: Array<BigInt>,
    _productDetailsCid: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createStable",
      "createStable(string,string,uint32,string[],uint32[],string):(address)",
      [
        ethereum.Value.fromString(_currency),
        ethereum.Value.fromString(_country),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromStringArray(_productIds),
        ethereum.Value.fromUnsignedBigIntArray(_weightage),
        ethereum.Value.fromString(_productDetailsCid)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateStableCall extends ethereum.Call {
  get inputs(): CreateStableCall__Inputs {
    return new CreateStableCall__Inputs(this);
  }

  get outputs(): CreateStableCall__Outputs {
    return new CreateStableCall__Outputs(this);
  }
}

export class CreateStableCall__Inputs {
  _call: CreateStableCall;

  constructor(call: CreateStableCall) {
    this._call = call;
  }

  get _currency(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _country(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _startDate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _productIds(): Array<string> {
    return this._call.inputValues[3].value.toStringArray();
  }

  get _weightage(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _productDetailsCid(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class CreateStableCall__Outputs {
  _call: CreateStableCall;

  constructor(call: CreateStableCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
