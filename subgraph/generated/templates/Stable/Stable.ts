// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AggregationRoundCompleted extends ethereum.Event {
  get params(): AggregationRoundCompleted__Params {
    return new AggregationRoundCompleted__Params(this);
  }
}

export class AggregationRoundCompleted__Params {
  _event: AggregationRoundCompleted;

  constructor(event: AggregationRoundCompleted) {
    this._event = event;
  }

  get aggregationRoundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AggregationRoundStarted extends ethereum.Event {
  get params(): AggregationRoundStarted__Params {
    return new AggregationRoundStarted__Params(this);
  }
}

export class AggregationRoundStarted__Params {
  _event: AggregationRoundStarted;

  constructor(event: AggregationRoundStarted) {
    this._event = event;
  }

  get aggregationRoundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PriceIndexUpdated extends ethereum.Event {
  get params(): PriceIndexUpdated__Params {
    return new PriceIndexUpdated__Params(this);
  }
}

export class PriceIndexUpdated__Params {
  _event: PriceIndexUpdated;

  constructor(event: PriceIndexUpdated) {
    this._event = event;
  }

  get aggregationRoundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get priceIndex(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class PricesSubmitted extends ethereum.Event {
  get params(): PricesSubmitted__Params {
    return new PricesSubmitted__Params(this);
  }
}

export class PricesSubmitted__Params {
  _event: PricesSubmitted;

  constructor(event: PricesSubmitted) {
    this._event = event;
  }

  get aggregationRoundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get productIds(): Array<string> {
    return this._event.parameters[1].value.toStringArray();
  }

  get prices(): Array<i32> {
    return this._event.parameters[2].value.toI32Array();
  }

  get source(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class PricesUpdated extends ethereum.Event {
  get params(): PricesUpdated__Params {
    return new PricesUpdated__Params(this);
  }
}

export class PricesUpdated__Params {
  _event: PricesUpdated;

  constructor(event: PricesUpdated) {
    this._event = event;
  }

  get aggregationRoundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get productIds(): Array<string> {
    return this._event.parameters[1].value.toStringArray();
  }

  get prices(): Array<i32> {
    return this._event.parameters[2].value.toI32Array();
  }
}

export class ProductBasketUpdated extends ethereum.Event {
  get params(): ProductBasketUpdated__Params {
    return new ProductBasketUpdated__Params(this);
  }
}

export class ProductBasketUpdated__Params {
  _event: ProductBasketUpdated;

  constructor(event: ProductBasketUpdated) {
    this._event = event;
  }

  get productIds(): Array<string> {
    return this._event.parameters[0].value.toStringArray();
  }

  get weightages(): Array<i32> {
    return this._event.parameters[1].value.toI32Array();
  }
}

export class Stable extends ethereum.SmartContract {
  static bind(address: Address): Stable {
    return new Stable("Stable", address);
  }

  aggregationDuration(): BigInt {
    let result = super.call(
      "aggregationDuration",
      "aggregationDuration():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_aggregationDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "aggregationDuration",
      "aggregationDuration():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  aggregationRoundId(): BigInt {
    let result = super.call(
      "aggregationRoundId",
      "aggregationRoundId():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_aggregationRoundId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "aggregationRoundId",
      "aggregationRoundId():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  country(): string {
    let result = super.call("country", "country():(string)", []);

    return result[0].toString();
  }

  try_country(): ethereum.CallResult<string> {
    let result = super.tryCall("country", "country():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  currency(): string {
    let result = super.call("currency", "currency():(string)", []);

    return result[0].toString();
  }

  try_currency(): ethereum.CallResult<string> {
    let result = super.tryCall("currency", "currency():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  previousAggregationRoundId(): BigInt {
    let result = super.call(
      "previousAggregationRoundId",
      "previousAggregationRoundId():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_previousAggregationRoundId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "previousAggregationRoundId",
      "previousAggregationRoundId():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  priceIndex(): i32 {
    let result = super.call("priceIndex", "priceIndex():(uint16)", []);

    return result[0].toI32();
  }

  try_priceIndex(): ethereum.CallResult<i32> {
    let result = super.tryCall("priceIndex", "priceIndex():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  prices(param0: string): i32 {
    let result = super.call("prices", "prices(string):(uint16)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toI32();
  }

  try_prices(param0: string): ethereum.CallResult<i32> {
    let result = super.tryCall("prices", "prices(string):(uint16)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  productBasket(param0: string): i32 {
    let result = super.call("productBasket", "productBasket(string):(uint8)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toI32();
  }

  try_productBasket(param0: string): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "productBasket",
      "productBasket(string):(uint8)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _country(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _currency(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _initialAggregationRoundId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _productIds(): Array<string> {
    return this._call.inputValues[4].value.toStringArray();
  }

  get _productWeightages(): Array<i32> {
    return this._call.inputValues[5].value.toI32Array();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SubmitPricesCall extends ethereum.Call {
  get inputs(): SubmitPricesCall__Inputs {
    return new SubmitPricesCall__Inputs(this);
  }

  get outputs(): SubmitPricesCall__Outputs {
    return new SubmitPricesCall__Outputs(this);
  }
}

export class SubmitPricesCall__Inputs {
  _call: SubmitPricesCall;

  constructor(call: SubmitPricesCall) {
    this._call = call;
  }

  get _productIds(): Array<string> {
    return this._call.inputValues[0].value.toStringArray();
  }

  get _prices(): Array<i32> {
    return this._call.inputValues[1].value.toI32Array();
  }

  get _source(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class SubmitPricesCall__Outputs {
  _call: SubmitPricesCall;

  constructor(call: SubmitPricesCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateAggregationRoundCall extends ethereum.Call {
  get inputs(): UpdateAggregationRoundCall__Inputs {
    return new UpdateAggregationRoundCall__Inputs(this);
  }

  get outputs(): UpdateAggregationRoundCall__Outputs {
    return new UpdateAggregationRoundCall__Outputs(this);
  }
}

export class UpdateAggregationRoundCall__Inputs {
  _call: UpdateAggregationRoundCall;

  constructor(call: UpdateAggregationRoundCall) {
    this._call = call;
  }
}

export class UpdateAggregationRoundCall__Outputs {
  _call: UpdateAggregationRoundCall;

  constructor(call: UpdateAggregationRoundCall) {
    this._call = call;
  }
}

export class UpdateBasketCall extends ethereum.Call {
  get inputs(): UpdateBasketCall__Inputs {
    return new UpdateBasketCall__Inputs(this);
  }

  get outputs(): UpdateBasketCall__Outputs {
    return new UpdateBasketCall__Outputs(this);
  }
}

export class UpdateBasketCall__Inputs {
  _call: UpdateBasketCall;

  constructor(call: UpdateBasketCall) {
    this._call = call;
  }

  get _productIds(): Array<string> {
    return this._call.inputValues[0].value.toStringArray();
  }

  get _weightages(): Array<i32> {
    return this._call.inputValues[1].value.toI32Array();
  }
}

export class UpdateBasketCall__Outputs {
  _call: UpdateBasketCall;

  constructor(call: UpdateBasketCall) {
    this._call = call;
  }
}

export class UpdatePricesCall extends ethereum.Call {
  get inputs(): UpdatePricesCall__Inputs {
    return new UpdatePricesCall__Inputs(this);
  }

  get outputs(): UpdatePricesCall__Outputs {
    return new UpdatePricesCall__Outputs(this);
  }
}

export class UpdatePricesCall__Inputs {
  _call: UpdatePricesCall;

  constructor(call: UpdatePricesCall) {
    this._call = call;
  }

  get _aggregationRoundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _productIds(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }

  get _prices(): Array<i32> {
    return this._call.inputValues[2].value.toI32Array();
  }

  get _priceIndex(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class UpdatePricesCall__Outputs {
  _call: UpdatePricesCall;

  constructor(call: UpdatePricesCall) {
    this._call = call;
  }
}
