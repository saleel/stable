type Product @entity {
  id: ID!
  name: String
  description: String
  category: String
  latestPrice: [LatestPrice!] @derivedFrom(field: "product")
  priceHistory: [Price!] @derivedFrom(field: "product")
  createdAt: BigInt!
}

type PriceSubmission @entity {
  id: ID!
  stable: Stable!
  country: String!
  currency: String!
  price: Int!
  product: Product!
  source: String!
  createdBy: String!
  createdAt: BigInt!
}

type Price @entity {
  id: ID!
  stable: Stable!
  country: String!
  currency: String!
  product: Product!
  value: Int!
  confirmations: Int!
  date: String!
  createdBy: BigInt!
  createdAt: BigInt!
}

type LatestPrice @entity {
  id: ID!
  country: String!
  currency: String!
  product: Product!
  price: Price!
  updatedAt: BigInt!
}

type PriceIndex @entity {
  id: ID!
  stable: Stable!
  country: String!
  currency: String!
  value: Int!
  date: String!
}

type ProductBasketItem @entity {
  id: ID!
  stable: Stable!
  productId: String!
  weightage: Int!
}

type Stable @entity {
  id: ID!
  country: String!
  currency: String!
  address: String!
  latestPriceIndex: PriceIndex @derivedFrom(field: "stable")
  productBasket: [ProductBasketItem!]! @derivedFrom(field: "stable")
  createdAt: BigInt!
  updatedAt: BigInt!
}
